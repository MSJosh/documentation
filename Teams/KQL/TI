  let dt_lookBack = 1h; // Define the lookback period for email data as 1 hour
    let ioc_lookBack = 14d; // Define the lookback period for threat intelligence data as 14 days
    let MessageUrlInfo_ = MessageUrlInfo
    | where isnotempty(Url) or isnotempty(UrlDomain) // Filter for non-empty URLs or URL domains
    | where TimeGenerated >= ago(dt_lookBack) // Filter for records within the lookback period
    | extend Url = tolower(Url), UrlDomain = tolower(UrlDomain) // Convert URLs and domains to lowercase
    | extend MessageUrlInfo_TimeGenerated = TimeGenerated; // Create a new column for the time generated
    let MessageEvents = MessageEvents
    | where TimeGenerated >= ago(dt_lookBack); // Filter email events within the lookback period
    let TI_Urls = ThreatIntelligenceIndicator
    | where TimeGenerated >= ago(ioc_lookBack) // Filter threat intelligence indicators within the lookback period
    | where isnotempty(Url) // Filter for non-empty URLs
    | extend Url = tolower(Url) // Convert URLs to lowercase
    | join kind=innerunique (MessageUrlInfo_) on Url // Join with email URL info on URL
    | where Active == true and ExpirationDateTime > now() // Filter for active indicators that haven't expired
    | where MessageUrlInfo_TimeGenerated < ExpirationDateTime // Ensure email info was generated before the indicator expired
    | summarize MessageUrlInfo_TimeGenerated = arg_max(MessageUrlInfo_TimeGenerated, *) by IndicatorId, Url // Get the latest email info for each indicator
    | project MessageUrlInfo_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Url, UserAgent, TeamsMessageId; // Select relevant columns
    let TI_Domains = ThreatIntelligenceIndicator
    | where TimeGenerated >= ago(ioc_lookBack) // Filter threat intelligence indicators within the lookback period
    | where isnotempty(DomainName) // Filter for non-empty domain names
    | extend DomainName = tolower(DomainName) // Convert domain names to lowercase
    | join kind=innerunique (MessageUrlInfo_) on $left.DomainName == $right.UrlDomain // Join with email URL info on domain name
    | where Active == true and ExpirationDateTime > now() // Filter for active indicators that haven't expired
    | where MessageUrlInfo_TimeGenerated < ExpirationDateTime // Ensure email info was generated before the indicator expired
    | summarize MessageUrlInfo_TimeGenerated = arg_max(MessageUrlInfo_TimeGenerated, *) by IndicatorId, UrlDomain // Get the latest email info for each indicator
    | project MessageUrlInfo_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, UrlDomain, UserAgent, TeamsMessageId; // Select relevant columns
    union TI_Urls, TI_Domains // Combine URL and domain threat intelligence data
    | extend timestamp = MessageUrlInfo_TimeGenerated // Add a timestamp column
    | join kind=inner (MessageEvents) on TeamsMessageId // Join with email events on network message ID
    | where DeliveryAction !has "Blocked" // Filter out blocked delivery actions
    | extend RecipientSmtpAddress = tostring(parse_json(RecipientDetails)[0].RecipientSmtpAddress)
    | extend Name = tostring(split(RecipientSmtpAddress, '@', 0)[0]), UPNSuffix = tostring(split(RecipientSmtpAddress, '@', 1)[0]); // Extract name and UPN suffix from recipient email address
